@page "/"



@using BlazorEmployeeCrud

@using System.Net.Http
@inject HttpClient Http

@using Microsoft.Extensions.Logging

<hr />
<table width="100%" style="background:#05163D;color:honeydew">
    <tr>
        <td width="20"> </td>
        <td>
            <h2>  Employee Details </h2>
        </td>
        <td> </td>
        <td align="right">
            <button class="btn btn-info" @onclick="@AddNewEmployee">Add New Employee</button>
        </td>
        <td width="10"> </td>
    </tr>
    <tr>
        <td colspan="2"></td>
    </tr>
</table>
<hr />
@if (showAddrow == true)
{
    <form>
        <table class="form-group">
       <tr>
                <td>
                    <label for="Name" class="control-label">Employee Name</label>
                </td>
                <td>
                    <input type="text" class="form-control" @bind="@employee.Name" />
                </td>
                <td>
                    <label for="Email" class="control-label">Department</label>
                </td>
                <td>
                    <input type="text" class="form-control" @bind="@employee.Department" />
                </td>
                <td>
                    <label for="Email" class="control-label">City</label>
                </td>
                <td>
                    <input type="text" class="form-control" @bind="@employee.City" />
                </td>
                <td width="20"> </td>
                <td>
                    <label for="Name" class="control-label">Gender</label>
                </td>
                <td>
                    <input type="text" class="form-control" @bind="@employee.Gender" />
                    <button type="submit" class="btn btn-success" @onclick="@AddCustomer" style="width:220px;">Save</button>
                </td>
            </tr>
          
        </table>
    </form>
}
<table width="100%" style="background:#0A2464;color:honeydew">
    <tr>
        <td width="20"> </td>
        <td>
            <h2>Employee List</h2>
        </td>

    </tr>
    <tr>
        <td colspan="2"></td>
    </tr>
</table>

@if (employeeList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>EmployeeId</th>
                <th>Employee Name</th>
                <th>Department</th>
                <th>Gender</th>
           </tr>
        </thead>
        <tbody>
            @foreach (var emp in employeeList)
            {
                <tr>
                    <td>@emp.EmployeeId</td>
                    <td>@emp.Name</td>
                    <td>@emp.Department</td>
                    <td>@emp.Gender</td>
                    <td><button class="btn btn-primary" @onclick="@(async () => await EditCustomer(emp.EmployeeId))" style="width:110px;">Edit</button></td>

                    <td><button class="btn btn-danger" @onclick="@(async () => await DeleteCustomer(emp.EmployeeId))">Delete</button></td>
                </tr>

            }
        </tbody>
    </table>
}


@code {

    private Employee[] employeeList;

    Employee employee = new Employee();

    string ids = "0";
    bool showAddrow = false;

    bool loadFailed;

    protected override async Task OnInitializedAsync()
    {
        ids = "0";
        employeeList = await Http.GetJsonAsync<Employee[]>("/api/Employee/");
    }

    void AddNewEmployee()
    {
        ids = "0";
        showAddrow = true;
        employee = new Employee();
    }
    // Add New Customer Details Method
    protected async Task AddCustomer()
    {
        if (ids == "0")

        {
            await Http.SendJsonAsync(HttpMethod.Post, "/api/Employee/", employee);
            employeeList = await Http.GetJsonAsync<Employee[]>("/api/Employee/");
        }
        else
        {
            await Http.SendJsonAsync(HttpMethod.Put, "/api/Employee/" + employee.EmployeeId, employee);
            employeeList = await Http.GetJsonAsync<Employee[]>("/api/Employee/");
        }

        showAddrow = false;
    }
    // Edit Method
    protected async Task EditCustomer(int employeeId)
    {
        showAddrow = true;

        ids = "1";
        //try
        //{
        loadFailed = false;
        ids = employeeId.ToString();
        employee = await Http.GetJsonAsync<Employee>("/api/Employee/" + employeeId);

        string s = employee.EmployeeId.ToString();;

        showAddrow = true;

        //    }
        //catch (Exception ex)
        //{
        //    loadFailed = true;
        //    Logger.LogWarning(ex, "Failed to load product {ProductId}", CustomerID);
        //}
    }
    // Delte Method
    protected async Task DeleteCustomer(int employeeId)
    {
        showAddrow = false;

        ids = employeeId.ToString();
        await Http.DeleteAsync("/api/Employee/" + employeeId);

        employeeList = await Http.GetJsonAsync<Employee[]>("/api/Employee/");
    }

}